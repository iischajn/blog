'use strict';

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

exports.__esModule = true;

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

/**
 * write html cache
 * @type {Class}
 */

var _default = (function (_think$middleware$base) {
  _inherits(_default, _think$middleware$base);

  function _default() {
    _classCallCheck(this, _default);

    _think$middleware$base.apply(this, arguments);
  }

  /**
   * run
   * @param  {String} content [view content]
   * @return {}         []
   */

  _default.prototype.run = function run(content) {
    var cache = this.config('html_cache');
    if (!cache.on || !this.http.html_filename) {
      return content;
    }
    this.recordViewFile();
    var file = cache.path + '/' + this.http.html_filename;
    think.mkdir(_path2['default'].dirname(file));
    _fs2['default'].writeFileSync(file, content);
    return content;
  };

  /**
   * record view file
   * @return {} []
   */

  _default.prototype.recordViewFile = function recordViewFile() {
    var http = this.http;
    var tplFile = http.tpl_file;
    var key = http.module + '/' + http.controller + '/' + http.action;
    thinkCache(thinkCache.VIEW, key, tplFile);
  };

  return _default;
})(think.middleware.base);

exports['default'] = _default;
module.exports = exports['default'];